#pragma once
#include <string>
#include <queue>
#include <mutex>

#include "Commands.h"

namespace circleAssignment {

class CommandQueue {
protected:
	std::mutex queueMutex;
	std::queue<DrawingCommand> commandQueue;

public:
	void push(DrawingCommand command) {
		std::lock_guard<std::mutex> lockGuard(queueMutex);

		commandQueue.push(command);
	}

	DrawingCommand pop() {
		std::lock_guard<std::mutex> lockGuard(queueMutex);

		std::shared_ptr<DrawingCommand> returnValue = commandQueue.front();
		commandQueue.pop();

		return returnValue;
	}
};

}
